/**
 * Openfort API
 * Complete Openfort API references and guides can be found at: https://openfort.xyz/docs
 *
 * OpenAPI spec version: 1.0.0
 * Contact: founders@openfort.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class CreateSessionRequest {
    /**
    * The address of the session key.
    */
    'address': string;
    /**
    * The chain ID.
    */
    'chainId': number;
    /**
    * If no account exists for a given player, create one with this address.
    */
    'externalOwnerAddress'?: string;
    /**
    * Maximum number of times the session key can be used.
    */
    'limit'?: number;
    /**
    * Whether the transactionIntent is optimistic (resolve before it arrives on chain) or not.
    */
    'optimistic'?: boolean;
    /**
    * The policy ID.
    */
    'policy'?: string;
    /**
    * The unix timestamp in seconds when the session key becomes valid.
    */
    'validAfter': number;
    /**
    * The unix timestamp in seconds when the session key expires.
    */
    'validUntil': number;
    /**
    * The list of whitelisted addresses (contracts the session key can interact with).
    */
    'whitelist'?: Array<string>;
    /**
    * The player ID.
    */
    'player': string;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "address",
            "baseName": "address",
            "type": "string",
            "format": ""
        },
        {
            "name": "chainId",
            "baseName": "chainId",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "externalOwnerAddress",
            "baseName": "externalOwnerAddress",
            "type": "string",
            "format": ""
        },
        {
            "name": "limit",
            "baseName": "limit",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "optimistic",
            "baseName": "optimistic",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "policy",
            "baseName": "policy",
            "type": "string",
            "format": ""
        },
        {
            "name": "validAfter",
            "baseName": "validAfter",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "validUntil",
            "baseName": "validUntil",
            "type": "number",
            "format": "int32"
        },
        {
            "name": "whitelist",
            "baseName": "whitelist",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "player",
            "baseName": "player",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CreateSessionRequest.attributeTypeMap;
    }

    public constructor() {
    }
}

