/**
 * Openfort API
 * Complete Openfort API references and guides can be found at: https://openfort.xyz/docs
 *
 * OpenAPI spec version: 1.0.0
 * Contact: founders@openfort.xyz
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class Interaction {
    /**
    * The address of the recipient of native tokens. Use *only* to transfer native tokens. If you provide one of a `pla_...`,  or `acc_...` it will be converted to the corresponding address.
    */
    'to'?: string;
    /**
    * The value intended to be sent with the transaction. Use only to transfer native tokens. Should be a stringified number in WEI (i.e. factor 10^18).
    */
    'value'?: string;
    /**
    * The contract ID you want to interact with. Must have been added to Openfort first, starts with `con_`.
    */
    'contract'?: string;
    /**
    * The function name of the contract. Accepts a a function signature as well (e.g. mint(address)).
    */
    'functionName'?: string;
    /**
    * The function arguments of the contract, in string format. If you provide one of a `pla_...`, `con_...` or `acc_...` it will be converted to the corresponding address.
    */
    'functionArgs'?: Array<any>;

    static readonly discriminator: string | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "to",
            "baseName": "to",
            "type": "string",
            "format": ""
        },
        {
            "name": "value",
            "baseName": "value",
            "type": "string",
            "format": ""
        },
        {
            "name": "contract",
            "baseName": "contract",
            "type": "string",
            "format": ""
        },
        {
            "name": "functionName",
            "baseName": "functionName",
            "type": "string",
            "format": ""
        },
        {
            "name": "functionArgs",
            "baseName": "functionArgs",
            "type": "Array<any>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return Interaction.attributeTypeMap;
    }

    public constructor() {
    }
}

